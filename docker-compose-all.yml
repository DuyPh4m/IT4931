version: '1'

services:
  # cassandra-node1:
  #   container_name: cassandra-node1
  #   image: cassandra:latest
  #   ports:
  #     - "7000:7000"
  #     - "9042:9042"
  #   environment:
  #     - CASSANDRA_SEEDS=cassandra-node1,cassandra-node2
  #     - CASSANDRA_CLUSTER_NAME=cassandraCluster
  #   networks:
  #     - app-net

  # cassandra-node2:
  #   container_name: cassandra-node2
  #   image: cassandra:latest
  #   environment:
  #     - CASSANDRA_SEEDS=cassandra-node1,cassandra-node2
  #     - CASSANDRA_CLUSTER_NAME=cassandraCluster
  #   networks:
  #     - app-net

  kafka1:
    container_name: kafka1
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=epl:3:3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - app-net

  kafka2:
    container_name: kafka2
    image: bitnami/kafka:latest
    ports:
      - "9093:9092"
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS=epl:3:3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - app-net

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-net

  spark-master:
    container_name: spark-master
    image: bitnami/spark:latest
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
    volumes:
      - ./spark_job.jar:/opt/bitnami/spark/jars/spark_job.jar
    networks:
      - app-net

  spark-worker1:
    container_name: spark-worker1
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    networks:
      - app-net

  spark-worker2:
    container_name: spark-worker2
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    networks:
      - app-net
  
  # elasticsearch:
  #   container_name: elasticsearch
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
  #   ports:
  #     - "9200:9200"
  #   environment:
  #     - xpack.security.enabled=false
  #     - discovery.type=single-node
  #   networks:
  #     - app-net

  # logstash:
  #   container_name: logstash
  #   image: docker.elastic.co/logstash/logstash:8.11.3
  #   ports:
  #     - "5000:5000"
  #   volumes:
  #     - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
  #   networks:
  #     - app-net
  #   depends_on:
  #     - elasticsearch

  # kibana:
  #   container_name: kibana
  #   image: docker.elastic.co/kibana/kibana:8.11.3
  #   ports:
  #     - "5601:5601"
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   networks:
  #     - app-net
  #   depends_on:
  #     - elasticsearch

  producer:
    container_name: producer
    build:
      context: ./ 
      dockerfile: Dockerfile_producer
    volumes:
      - ./data:/app/data
    networks:
      - app-net
    depends_on:
      - kafka1
      - kafka2

networks:
  app-net:
    driver: bridge